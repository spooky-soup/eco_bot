import telebot
from telebot import types
import pymysql
import json

bot = telebot.TeleBot('6483038185:AAEkPUufyhe4PotSf4a-6z9Mj61zunLMVGU')
form_webapp = types.WebAppInfo("https://euphonious-melba-92fb97.netlify.app/form")
choose_item_webapp_inline = types.WebAppInfo("https://euphonious-melba-92fb97.netlify.app/items")
choose_item_webapp_keyboard = types.WebAppInfo("https://euphonious-melba-92fb97.netlify.app/things")

# –ø–æ–¥–Ω–∏–º–∞–µ–º –±–∞–∑—É
conn = pymysql.connect(
    host='localhost',
    user='admin',
    password="admin",
)
cur = conn.cursor()


# –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "/start":
        user_id = message.from_user.id
        username = message.from_user.username
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        query = "INSERT IGNORE INTO mysql.telegram_user (uuid,username) VALUES (" + str(user_id) + \
                ", \"" + str(username) + "\" );"
        cur.execute(query)
        conn.commit()

        menu(message)

    elif message.text == "/dbs":
        cur.execute("SELECT t.* FROM mysql.point-self t LIMIT 501;")
        strlist = []
        for x in cur:
            strlist.append(str(x) + "\n")
        bot.send_message(message.from_user.id, ''.join(strlist))
    elif message.text == "/help":
        bot.send_message(message.from_user.id,
                         'üåø –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–¥–∞—Ç—å –º—É—Å–æ—Ä —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ.\n' +
                         '*üìç –ó–æ–Ω–∞ –ø–æ–∏—Å–∫–∞* –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∑–∞–¥–∞—Ç—å —Ç–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞.\n' +
                         '–ê *üîé –ù–∞–π—Ç–∏ —Ç–æ—á–∫–∏ —Ä—è–¥–æ–º* –ø–æ–∫–∞–∂–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—Ç—Ö–æ–¥–æ–≤. \n' +
                         '‚ñ∂Ô∏è –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–ø–∏—à–∏ /start.', parse_mode='Markdown')
    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


@bot.message_handler(content_types=["web_app_data"])  # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç webapp –¥–∞–Ω–Ω—ã–µ
def answer(webapp_message):
    print(webapp_message)  # –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    print(webapp_message.web_app_data.data)  # –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–æ —á—Ç–æ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –±–æ—Ç–∞
    # ------------------–ó–û–ù–ê –ü–û–ò–°–ö–ê
    if webapp_message.web_app_data.button_text == 'üìç –ó–æ–Ω–∞ –ø–æ–∏—Å–∫–∞':
        user_id = webapp_message.from_user.id
        data = json.loads(webapp_message.web_app_data.data)
        try:
            data['radius'] = int(data['radius'])
        except ValueError:
            bot.send_message(webapp_message.chat.id,
                             f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤—ã –≤–≤–µ–ª–∏ –≤ –ø–æ–ª–µ \"–†–∞–¥–∏—É—Å\" –∑–Ω–∞—á–µ–Ω–∏–µ \"{data['radius']}\".\n" +
                             '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏ –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤.')
            return
        # –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö: {"region":"–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å","city":"–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫","street":"–ò–ª—å–∏—á–∞","radius":"4"}
        query = "UPDATE mysql.telegram_user SET region_name= \"" + str(data['region']) + \
                "\", city_name= \"" + str(data['city']) + \
                "\", address= \"" + str(data['street']) + \
                "\", radius=" + str(data['radius']) + \
                " WHERE uuid=" + str(user_id) + ";"
        cur.execute(query)
        conn.commit()

        bot.send_message(webapp_message.chat.id, f"–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: \n–†–µ–≥–∏–æ–Ω: {data['region']}\n" +
                         f"–ì–æ—Ä–æ–¥: {data['city']}\n–£–ª–∏—Ü–∞:{data['street']}\n–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞: {data['radius']} –∫–º")

    # ---------------------- –ù–ê–ô–¢–ò –¢–û–ß–ö–ò –†–Ø–î–û–ú
    elif webapp_message.web_app_data.button_text == 'üîé –ù–∞–π—Ç–∏ —Ç–æ—á–∫–∏ —Ä—è–¥–æ–º':
        # –°–ø–∏—Å–æ–∫ ID –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (1: –û–¥–µ–∂–¥–∞, 2: –ë–∞—Ç–∞—Ä–µ–π–∫–∏, 3: –ë—É–º–∞–≥–∞, 4: –õ–∞–º–ø–æ—á–∫–∏)
        items_ids = [i["id"] for i in json.loads(webapp_message.web_app_data.data)]
        # –û–¥–µ–∂–¥–∞ 10, –±–∞—Ç–∞—Ä–µ–π–∫–∏ 8,–±—É–º–∞–≥–∞ 9, –ª–∞–º–ø–æ—á–∫–∏ 12

        cur.execute("(SELECT DISTINCT city_name FROM mysql.telegram_user WHERE uuid= \"" + \
                str(webapp_message.from_user.id) + "\" );")

        for r in cur:
            if (r[0] is None):
                bot.send_message(webapp_message.chat.id,
                                 "–í—ã –Ω–µ –≤–≤–µ–ª–∏ –ª–æ–∫–∞—Ü–∏—é –ø–æ–∏—Å–∫–∞. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ *üìç –ó–æ–Ω–∞ –ø–æ–∏—Å–∫–∞*",
                                 parse_mode='Markdown')
                return

        # –¥–æ—Å—Ç–∞–µ–º id –≥–æ—Ä–æ–¥–∞
        cur.execute("USE `mysql`;")
        query = "SELECT DISTINCT uuid FROM `city-self` WHERE city_name IN" \
                "(SELECT DISTINCT city_name FROM telegram_user WHERE uuid= \"" + \
                str(webapp_message.from_user.id) + "\" );"
        cur.execute(query)
        cur_list = []
        for x in cur:
            cur_list.append(str(x))
        city_id = cur_list[0]
        city_id = city_id[1]
        # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º id –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        id_given = query_ids(items_ids)
        id_converted = convert_ids(id_given)
        #–∏—â–µ–º –∞–¥—Ä–µ—Å–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –≥–æ—Ä–æ–¥—É
        query = "SELECT DISTINCT street_name FROM `address` WHERE uuid IN" \
                "(SELECT DISTINCT address_uuid FROM `point-self` WHERE uuid IN" \
                " (SELECT DISTINCT uuid FROM `point-types` WHERE avl_types in" \
                + id_converted + ") AND city_uuid= " + city_id + ");"
        cur.execute(query)
        strlist = []
        for x in cur:
            temp = str(x)
            for char in '()\'':
                temp = temp.replace(char, '')
            strlist.append(temp + "\n")
        bot.send_message(webapp_message.chat.id,
                         ''.join(strlist))

    else:
        bot.send_message(webapp_message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è


def query_ids(ids):
    res = "("
    for x in ids:
        res = res + str(x) + ","
    res = res[:-1]
    res += ")"
    return res


def convert_ids(str_ids):
    if "1" in str_ids:
        str_ids = str_ids.replace("1", "10")
    elif "2" in str_ids:
        str_ids = str_ids.replace("2", "8")
    elif "3" in str_ids:
        str_ids = str_ids.replace("3", "9")
    elif "4" in str_ids:
        str_ids = str_ids.replace("4", "12")
    return str_ids


def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üìç –ó–æ–Ω–∞ –ø–æ–∏—Å–∫–∞', web_app=form_webapp)
    btn2 = types.KeyboardButton('üîé –ù–∞–π—Ç–∏ —Ç–æ—á–∫–∏ —Ä—è–¥–æ–º', web_app=choose_item_webapp_keyboard)
    btn3 = types.KeyboardButton('ü§î –ö–∞–∫ —Å–¥–∞–≤–∞—Ç—å')
    btn4 = types.KeyboardButton('‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å—Å—è')
    btn5 = types.KeyboardButton('üíØ –†–µ–π—Ç–∏–Ω–≥')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, '‚¨á –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)


# –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –∫—Ä—É—Ç–∏—Ç –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
bot.polling(none_stop=True, interval=0)
